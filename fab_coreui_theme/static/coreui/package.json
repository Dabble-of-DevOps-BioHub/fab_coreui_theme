{
  "dependencies": {
    "@coreui/coreui": "^3.4.0",
    "@coreui/icons": "^2.0.1"
  },
  "scripts": {
    "//": " --- DEPLOYMENT & ZIP --- ",
    "reinstall": "rimraf node_modules && npm cache clean && npm install",
    "start": "run-p serve watch",
    "css:dev": "node-sass src/scss/index.scss --output-style compressed > dist/css/app.css",
    "css:prod": "node-sass src/scss/index.scss --output-style compressed | postcss -u autoprefixer -b 'last 2 versions' > dist/css/app.css",
    "js:dev": "babel src/js | uglifyjs > dist/js/app.js",
    "js:prod": "babel src/js | uglifyjs -m -c > dist/js/app.js",
    "js:vendor": "uglifyjs vendor/*.js > dist/js/vendor.js",
    "clean": "rimraf dist",
    "mkdirs": "mkdir -p dist/js && mkdir -p dist/css",
    "copy:assets": "cp -r assets/* dist",
    "copy:html": "find src -name '*.html' -type f -exec cp {} dist \\;",
    "copy": "npm run copy:assets && npm run copy:html",
    "prebuild:dev": "npm run clean && npm run mkdirs && npm run copy",
    "build:dev": "npm run css:dev && npm run js:dev && npm run js:vendor",
    "prebuild:prod": "npm run clean && npm run mkdirs && npm run copy",
    "build:prod": "npm run css:prod && npm run js:prod && npm run js:vendor",
    "postbuild:prod": "npm run hash",
    "hash": "hashmark **/(app|vendor).* -d md5 -l 8 -c dist '{dir}/{name}.{hash}{ext}' | replaceinfiles -S -s dist/**/*.html",
    "posthash": "rm dist/css/app.css && rm dist/js/app.js",
    "lint": "eslint src/js --fix",
    "pretest": "npm run lint",
    "test": "npm run istanbul -s",
    "posttest": "npm run coverage -s",
    "istanbul": "istanbul cover ./node_modules/mocha/bin/_mocha 'test/**/*.spec.js'",
    "coverage": "open -a 'Google Chrome' ./coverage/lcov-report/index.html",
    "kill": "lsof -n -i:8080 | grep LISTEN | awk '{print $2}' | xargs kill -9",
    "preserve": "npm run build:dev && npm run kill",
    "serve": "browser-sync start -s --files 'dist/**/*.(js|css|html)' --ss 'dist' --port 8080 --reload-debounce 500",
    "watch:assets": "onchange 'assets/**/*' -- npm run copy:assets",
    "watch:vendor": "onchange 'vendor/**/*.js' -- npm run js:vendor",
    "watch:html": "onchange 'src/**/*.html' -- npm run copy:html",
    "watch:css": "onchange 'src/**/*.scss' -- npm run css:dev",
    "watch:js": "onchange 'src/**/*.js' -- npm run js:dev",
    "watch": "run-p watch:css watch:js watch:html watch:assets",
    "postversion": "git push && git push --tags",
    "predeploy": "npm run build:prod",
    "deploy": "firebase deploy --project project-name",
    "prezip": "npm run build:prod",
    "zip": "cd dist && zip -r -X ../app.zip ."
  }
}
